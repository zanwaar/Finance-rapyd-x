import {
  Flex,
  Box,
  Stack,
  Link,
  Button,
  Heading,
  Text,
  useColorModeValue,
  Center,
} from "@chakra-ui/react";
import { FcGoogle } from "react-icons/fc";
import { signIn, getProviders } from "next-auth/react";
import { useState } from "react";
import { getServerSession } from "next-auth/next";
import { authOptions } from "../api/auth/[...nextauth]";
import Head from "next/head";
export default function Auth({ providers }) {
  const [isLoading, setIsLoading] = useState(false);
  const socialAction = (action) => {
    setIsLoading(true);
    signIn(action, { redirect: false });
  };
  return (
    <>
      <Head>
        <title>Finance Rapyd X App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex
        minH={"100vh"}
        align={"center"}
        justify={"center"}
        bg={useColorModeValue("gray.50", "gray.800")}
      >
        <Stack spacing={4} mx={"auto"} maxW={"lg"} px={6}>
          <Stack align={"center"}>
            <Heading fontSize={{ base: "4xl", lg: "5xl" }}>
              Finance Rapyd X
            </Heading>
            <Text fontSize={"lg"} color={"gray.600"}>
              to enjoy all of our cool <Link color={"blue.400"}>features</Link>{" "}
              ✌️
            </Text>
          </Stack>
          <Box
            rounded={"lg"}
            bg={useColorModeValue("white", "gray.700")}
            boxShadow={"lg"}
            p={5}
          >
            {Object.values(providers).map((provider) => (
              <div key={provider.name}>
                <Button
                  w={"full"}
                  maxW={"md"}
                  variant={"outline"}
                  leftIcon={<FcGoogle />}
                  onClick={() => socialAction(provider.id)}
                  isLoading={isLoading}
                >
                  <Center>
                    <Text> Sign in with {provider.name}</Text>
                  </Center>
                </Button>
              </div>
            ))}
          </Box>
        </Stack>
      </Flex>
    </>
  );
}
export async function getServerSideProps(context) {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (session) {
    return { redirect: { destination: "/" } };
  }

  const providers = await getProviders();

  return {
    props: { providers: providers ?? [] },
  };
}
